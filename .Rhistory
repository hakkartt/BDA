pred = x,
count=data2$cnt,
holiday = data2$is_holiday,
monday = data2$is_monday,
saturday = data2$is_saturday)
stan_data3 <- list(N=dim(data3)[1],
fit = dim(data3)[1] - x,
pred = x,
count=data3$cnt,
holiday = data3$is_holiday,
monday = data3$is_monday,
saturday = data3$is_saturday)
model1 <- rstan::sampling(hm, data=stan_data1)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model1, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data1)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle1 <- sqrt(mean((log(preds_point_est) - log(data1$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data1$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model2, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data2)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle2 <- sqrt(mean((log(preds_point_est) - log(data2$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data2$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model3, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data3)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle3 <- sqrt(mean((log(preds_point_est) - log(data3$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data3$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
mean(c(rmsle1, rmsle2, rmsle3))
knitr::opts_chunk$set(echo = TRUE)
library(rstan)
rstan_options(auto_write = TRUE)
set.seed(123)
library(lubridate)
x <- 7*24
data <- read.csv("london_merged.csv") # read in data
data1 <- data[10972:11979,]
data2 <- data[14489:15496,]
data3 <- data[16167:17174,]
stan_data1 <- list(N=dim(data1)[1],
fit = dim(data1)[1] - x,
pred = x,
count=data1$cnt,
holiday = data1$is_holiday,
weekend = data1$is_weekend)
stan_data2 <- list(N=dim(data2)[1],
fit = dim(data2)[1] - x,
pred = x,
count=data2$cnt,
holiday = data2$is_holiday,
weekend = data2$is_weekend)
stan_data3 <- list(N=dim(data3)[1],
fit = dim(data3)[1] - x,
pred = x,
count=data3$cnt,
holiday = data3$is_holiday,
weekend = data3$is_weekend)
model1 <- rstan::sampling(hm, data=stan_data1)
model2 <- rstan::sampling(hm, data=stan_data2)
model3 <- rstan::sampling(hm, data=stan_data3)
monitor(model1)
monitor(model2)
monitor(model3)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model1, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data1)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle1 <- sqrt(mean((log(preds_point_est) - log(data1$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data1$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model2, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data2)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle2 <- sqrt(mean((log(preds_point_est) - log(data2$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data2$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model3, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data3)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle3 <- sqrt(mean((log(preds_point_est) - log(data3$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data3$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model1, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data1)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle1 <- sqrt(mean((log(preds_point_est) - data1$cnt[(num_train+1):N]))^2))
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model2, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data2)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle2 <- sqrt(mean((log(preds_point_est) - log(data2$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data2$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model3, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data3)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle3 <- sqrt(mean((log(preds_point_est) - log(data3$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data3$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
rmsles <- c(rmsle1, rmsle2, rmsle3)
means(rmsles)
mean(rmsles)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model2, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data2)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle2 <- sqrt(mean((log(preds_point_est[168]) - log(data2$cnt[168]))^2))
# Plots
residuals <- preds_point_est - data2$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model2, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data2)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle2 <- sqrt(mean((log(preds_point_est[168]) - log(data2$cnt[N]))^2))
# Plots
residuals <- preds_point_est - data2$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model1, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data1)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle1 <- sqrt(mean((log(preds_point_est) - log(data1$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data1$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model2, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data2)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle2 <- sqrt(mean((log(preds_point_est) - log(data2$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data2$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model3, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data3)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle3 <- sqrt(mean((log(preds_point_est) - log(data3$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data3$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
knitr::opts_chunk$set(echo = TRUE)
library(rstan)
rstan_options(auto_write = TRUE)
set.seed(123)
library(lubridate)
x <- 7*24
data <- read.csv("london_merged.csv") # read in data
data$weekday = weekdays(as.Date(data$timestamp))
data$is_saturday = as.numeric((weekdays(as.Date(data$timestamp)) == 'lauantai'))
data$is_monday = as.numeric((weekdays(as.Date(data$timestamp)) == 'maanantai'))
data$is_sunday = as.numeric((weekdays(as.Date(data$timestamp)) == 'sunnuntai'))
data1 <- data[10972:11979,]
data2 <- data[14489:15496,]
data3 <- data[16167:17174,]
stan_data1 <- list(N=dim(data1)[1],
fit = dim(data1)[1] - x,
pred = x,
count=data1$cnt,
holiday = data1$is_holiday,
monday = data1$is_monday,
saturday = data1$is_saturday,
sunday = data1$is_sunday)
stan_data2 <- list(N=dim(data2)[1],
fit = dim(data2)[1] - x,
pred = x,
count=data2$cnt,
holiday = data2$is_holiday,
monday = data2$is_monday,
saturday = data2$is_saturday,
sunday = data2$is_sunday)
stan_data3 <- list(N=dim(data3)[1],
fit = dim(data3)[1] - x,
pred = x,
count=data3$cnt,
holiday = data3$is_holiday,
monday = data3$is_monday,
saturday = data3$is_saturday,
sunday = data3$is_sunday)
model1 <- rstan::sampling(hm, data=stan_data1)
model2 <- rstan::sampling(hm, data=stan_data2)
model3 <- rstan::sampling(hm, data=stan_data3)
monitor(model1)
monitor(model2)
monitor(model3)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model1, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data1)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle1 <- sqrt(mean((log(preds_point_est) - log(data1$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data1$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model2, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data2)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle2 <- sqrt(mean((log(preds_point_est) - log(data2$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data2$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model3, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data3)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle3 <- sqrt(mean((log(preds_point_est) - log(data3$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data3$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model1, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data1)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle1 <- sqrt(mean((log(preds_point_est) - log(data1$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data1$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
knitr::opts_chunk$set(echo = TRUE)
library(rstan)
rstan_options(auto_write = TRUE)
set.seed(123)
library(lubridate)
x <- 7*24
data <- read.csv("london_merged.csv") # read in data
data1 <- data[10972:11979,]
data2 <- data[14489:15496,]
data3 <- data[16167:17174,]
stan_data1 <- list(N=dim(data1)[1],
fit = dim(data1)[1] - x,
pred = x,
count=data1$cnt,
holiday = data1$is_holiday,
weekend = data1$is_weekend)
stan_data2 <- list(N=dim(data2)[1],
fit = dim(data2)[1] - x,
pred = x,
count=data2$cnt,
holiday = data2$is_holiday,
weekend = data2$is_weekend)
stan_data3 <- list(N=dim(data3)[1],
fit = dim(data3)[1] - x,
pred = x,
count=data3$cnt,
holiday = data3$is_holiday,
weekend = data3$is_weekend)
model1 <- rstan::sampling(hm, data=stan_data1)
knitr::opts_chunk$set(echo = TRUE)
library(rstan)
rstan_options(auto_write = TRUE)
set.seed(123)
library(lubridate)
x <- 7*24
data <- read.csv("london_merged.csv") # read in data
data1 <- data[10972:11979,]
data2 <- data[14489:15496,]
data3 <- data[16167:17174,]
stan_data1 <- list(N=dim(data1)[1],
fit = dim(data1)[1] - x,
pred = x,
count=data1$cnt,
holiday = data1$is_holiday,
weekend = data1$is_weekend)
stan_data2 <- list(N=dim(data2)[1],
fit = dim(data2)[1] - x,
pred = x,
count=data2$cnt,
holiday = data2$is_holiday,
weekend = data2$is_weekend)
stan_data3 <- list(N=dim(data3)[1],
fit = dim(data3)[1] - x,
pred = x,
count=data3$cnt,
holiday = data3$is_holiday,
weekend = data3$is_weekend)
model1 <- rstan::sampling(hm, data=stan_data1)
x <- 7*24
data <- read.csv("london_merged.csv") # read in data
data1 <- data[10972:11979,]
data2 <- data[14489:15496,]
data3 <- data[16167:17174,]
stan_data1 <- list(N=dim(data1)[1],
fit = dim(data1)[1] - x,
pred = x,
count=data1$cnt,
holiday = data1$is_holiday,
weekend = data1$is_weekend)
stan_data2 <- list(N=dim(data2)[1],
fit = dim(data2)[1] - x,
pred = x,
count=data2$cnt,
holiday = data2$is_holiday,
weekend = data2$is_weekend)
stan_data3 <- list(N=dim(data3)[1],
fit = dim(data3)[1] - x,
pred = x,
count=data3$cnt,
holiday = data3$is_holiday,
weekend = data3$is_weekend)
model1 <- sampling(hm, data=stan_data1)
x <- 7*24
data <- read.csv("london_merged.csv") # read in data
data1 <- data[10972:11979,]
data2 <- data[14489:15496,]
data3 <- data[16167:17174,]
stan_data1 <- list(N=dim(data1)[1],
fit = dim(data1)[1] - x,
pred = x,
count=data1$cnt,
holiday = data1$is_holiday,
weekend = data1$is_weekend)
stan_data2 <- list(N=dim(data2)[1],
fit = dim(data2)[1] - x,
pred = x,
count=data2$cnt,
holiday = data2$is_holiday,
weekend = data2$is_weekend)
stan_data3 <- list(N=dim(data3)[1],
fit = dim(data3)[1] - x,
pred = x,
count=data3$cnt,
holiday = data3$is_holiday,
weekend = data3$is_weekend)
model1 <- rstan::sampling(hm, data=stan_data1)
x <- 7*24
data <- read.csv("london_merged.csv") # read in data
data1 <- data[10972:11979,]
data2 <- data[14489:15496,]
data3 <- data[16167:17174,]
stan_data1 <- list(N=dim(data1)[1],
fit = dim(data1)[1] - x,
pred = x,
count=data1$cnt,
holiday = data1$is_holiday,
weekend = data1$is_weekend)
stan_data2 <- list(N=dim(data2)[1],
fit = dim(data2)[1] - x,
pred = x,
count=data2$cnt,
holiday = data2$is_holiday,
weekend = data2$is_weekend)
stan_data3 <- list(N=dim(data3)[1],
fit = dim(data3)[1] - x,
pred = x,
count=data3$cnt,
holiday = data3$is_holiday,
weekend = data3$is_weekend)
model1 <- rstan::sampling(hm, data=stan_data1)
model2 <- rstan::sampling(hm, data=stan_data2)
model3 <- rstan::sampling(hm, data=stan_data3)
monitor(model1)
monitor(model2)
monitor(model3)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model1, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data1)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle1 <- sqrt(mean((log(preds_point_est) - log(data1$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data1$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model2, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data2)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle2 <- sqrt(mean((log(preds_point_est) - log(data2$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data2$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model3, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data3)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle3 <- sqrt(mean((log(preds_point_est) - log(data3$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data3$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
params <- paste("cnt_pred[", 1:168, "]", sep = "")
preds <- as.data.frame(rstan::extract(model3, pars = params))
preds_point_est <- colMeans(preds)
N=dim(data3)[1]
num_train <- N - x
num_test <- x
# RMSLE
rmsle3 <- sqrt(mean((log(preds_point_est) - log(data3$cnt[(num_train+1):N]))^2))
# Plots
residuals <- preds_point_est - data3$cnt[(num_train+1):N]
acf(residuals)
qqnorm(residuals)
qqline(residuals)
mean(c(rmsle1, rmsle2, rmsle3))
